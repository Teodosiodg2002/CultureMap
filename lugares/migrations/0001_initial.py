# Generated by Django 5.2.7 on 2025-10-12 10:17

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lugar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(db_index=True, help_text='Nombre descriptivo del lugar cultural', max_length=200, verbose_name='Nombre del lugar')),
                ('descripcion', models.TextField(help_text='Descripción detallada del lugar, su historia y características', verbose_name='Descripción')),
                ('direccion', models.CharField(blank=True, help_text='Dirección completa del lugar', max_length=255, null=True, verbose_name='Dirección')),
                ('lat', models.FloatField(blank=True, help_text='Latitud en grados decimales (ej: 37.1773)', null=True, validators=[django.core.validators.MinValueValidator(-90.0, message='La latitud debe ser >= -90'), django.core.validators.MaxValueValidator(90.0, message='La latitud debe ser <= 90')], verbose_name='Latitud')),
                ('lng', models.FloatField(blank=True, help_text='Longitud en grados decimales (ej: -3.5986)', null=True, validators=[django.core.validators.MinValueValidator(-180.0, message='La longitud debe ser >= -180'), django.core.validators.MaxValueValidator(180.0, message='La longitud debe ser <= 180')], verbose_name='Longitud')),
                ('categoria', models.CharField(choices=[('mirador', 'Mirador'), ('bar', 'Bar con encanto'), ('galeria', 'Galería'), ('tienda', 'Tienda local'), ('arte_urbano', 'Arte urbano'), ('exposicion', 'Exposición'), ('charla', 'Charla'), ('concierto', 'Concierto'), ('plaza', 'Plaza'), ('otros', 'Otros')], db_index=True, default='otros', help_text='Tipo de lugar cultural', max_length=30, verbose_name='Categoría')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente de revisión'), ('aprobado', 'Aprobado'), ('rechazado', 'Rechazado')], db_index=True, default='pendiente', help_text='Estado actual en el proceso de moderación', max_length=20, verbose_name='Estado de aprobación')),
                ('motivo_rechazo', models.TextField(blank=True, help_text='Razón por la que se rechazó la propuesta', null=True, verbose_name='Motivo de rechazo')),
                ('publicado', models.BooleanField(db_index=True, default=True, help_text='Si está desmarcado, el lugar no será visible incluso si está aprobado', verbose_name='Publicado')),
                ('creado_en', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Fecha y hora en que se creó el lugar', verbose_name='Fecha de creación')),
                ('actualizado_en', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última modificación', verbose_name='Última actualización')),
                ('creado_por', models.ForeignKey(blank=True, help_text='Usuario que propuso este lugar', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lugares_creados', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Lugar',
                'verbose_name_plural': 'Lugares',
                'ordering': ['-creado_en'],
                'indexes': [models.Index(fields=['lat', 'lng'], name='idx_lugar_coords'), models.Index(fields=['categoria', 'estado', 'publicado'], name='idx_lugar_filtros')],
            },
        ),
    ]
